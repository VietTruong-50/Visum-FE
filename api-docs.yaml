openapi: 3.0.1
info:
  title: Visum app
  description: The API for the Visum music web project
  version: v2
servers:
  - url: http://localhost:8080/
    description: This is the sample api doc
security:
  - bearer-jwt:
      - read
      - write
paths:
  /auth/login:
    post:
      tags:
        - user-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseLoginResponseDTO"
  /auth/sign-up:
    post:
      tags:
        - user-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseUserDTO"
  /visum/user:
    get:
      tags:
        - user-controller
      operationId: getCurrentUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseUserDTO"
  /visum/user/{id}:
    put:
      tags:
        - user-controller
      operationId: updateUser
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseUserDTO"
  /visum/changePassword/user/{id}:
    put:
      tags:
        - user-controller
      operationId: changePassword
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseUserDTO"
  /visum/genres:
    get:
      tags: 
        - genre-controller
      operationId: getGenre
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGenreDTO'
  /visum/songs:
    get:
      tags:
        - song-controller
      operationId: getSong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseSongDTO'
  /visum/songs/{category}:
    get:
      tags:
        - song-controller
      operationId: getSongByCategory
      parameters:
      - in: path
        name: category
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseSongByCategory'
  /visum/favorites:
    get:
      tags:
        - song-controller
      operationId: getFavorite
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseFavoriteSong'
components:
  schemas:
    UserDTO:
      required:
        - birthOfDate
        - email
        - firstName
        - gender
        - lastName
        - mobile
        - password
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        gender:
          type: string
          enum: [Male, FEMALE, OTHER]
        birthOfDate:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        mobile:
          pattern: ^0\d{9}$
          type: string
        password:
          type: string
        avatar:
          type: string
        role:
          type: string
        email:
          maxLength: 256
          minLength: 0
          type: string
    ApiResponseUserDTO:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/UserDTO"
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    LoginRequestDTO:
      required:
        - password
        - userName
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
    ApiResponseLoginResponseDTO:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/LoginResponseDTO"
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    LoginResponseDTO:
      required:
        - token
      type: object
      properties:
        token:
          type: string
    ApiResponseGenreDTO:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/GenreDTO"
        errorCode:
          type: string
        message: 
          type: object
        responseCode:
          type: integer
          format: int32
    GenreDTO:
      type: object
      properties:
        genre:
          type: string
        category:
          type: array
          items:
            type: string
    ApiResponseSongDTO:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/SongDTO"
        errorCode:
          type: string
        message: 
          type: object
        responseCode:
          type: integer
          format: int32
    SongDTO:
      type: object
      properties:
        id: 
          type: string
        title:
          type: string
        image:
          type: string
        thumbnail:
          type: string
        genre:
          type: object
        songAuthor:
          type: object
        duration:
          type: number
        vip:
          type: boolean
    ApiResponseSongByCategory:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageSong'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ApiResponseFavoriteSong:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageSong'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageSong:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SongDTO'
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        number:
          type: integer
          format: int32
        empty:
          type: boolean
    PasswordDTO:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        cf_password:
          type: string
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
  securitySchemes:
    bearer-jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
